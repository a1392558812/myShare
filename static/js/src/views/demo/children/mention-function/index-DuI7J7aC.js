import{a as e}from"./components/async-tribute/index-DCH8OUUg.js";import{t}from"./components/tribute/index-Bv26eM5K.js";import{_ as n}from"../../../../../plugin-vue_export-helper-BCo6x5W8.js";import{N as s,a as o,g as i,l as a,j as r,x as m,y as l,P as u}from"../../../../../@vue-runtime-core-hXVbjtl0.js";import"../../../../assets/images/mention-function/01-BuR_gzQs.js";import"../../../../assets/images/mention-function/02-B8GIfYyc.js";import"../../../../assets/images/mention-function/03-CklHmpUC.js";import"../../../../assets/images/mention-function/04-DvrsfXdw.js";import"./components/vue-tribute-LVwbo5uT.js";import"../../../../../jquery-IViRahhZ.js";import"../../../../../__commonjsHelpers__-MdiGH4nz.js";import"../../../../../tributejs-COWOt0o1.js";import"../../../../static/tribute/index-C6blBvLc.js";import"../../../../static/tribute/tribute-DaPSKTRJ.js";import"../../../../common/util/debounce-CNl5k4zp.js";import"../../../../../@vue-reactivity-UKyDGrvc.js";import"../../../../../@vue-shared-LkD7rn4X.js";import"./components/tribute-utill-DskoVJ8f.js";import"../../../../components/toast/index-DeVUtnB9.js";import"../../../../common/util/guid-CEQsGVY5.js";import"../../../../../@vue-runtime-dom-DIQGxI75.js";const c={name:"view-demo-mention-function",components:{asyncTribute:e,tribute:t},setup:()=>({})},p=e=>(m("data-v-0ece1a26"),e=e(),l(),e),d={class:"h-screen overflow-auto bg-gradient-to-br from-indigo-50 to-purple-50"},b={class:"w-[1200px] mx-auto px-4 py-12"},f=p((()=>a("div",{class:"text-center mb-10"},[a("h1",{class:"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-600"}," @提及功能的同步和异步实现方式 ")],-1))),h={class:"w-full overflow-y-auto"},g={class:"mb-10 bg-white rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl"},x=p((()=>a("h2",{class:"text-2xl font-semibold text-gray-800 mb-4"},"同步提及功能",-1))),v={class:"mb-10 bg-white rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl"},j=p((()=>a("h2",{class:"text-2xl font-semibold text-gray-800 mb-4"},"异步提及功能",-1))),w=p((()=>a("div",{class:"bg-white rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl"},[a("h2",{class:"text-2xl font-semibold text-gray-800 mb-4"},"配置参数说明"),a("pre",{class:"overflow-y-auto bg-gray-50 p-4 rounded-lg border border-gray-200 font-mono text-sm max-h-96"},[u("            {\n              // 开始查找的符号或字符串\n              trigger: '@',\n\n              // 异步加载时间（自己新添的）\n              searchDebounce:0,\n\n              // @提到的目标元素\n              iframe: null,\n\n              // 在弹出菜单中为活动项添加的类\n              selectClass: 'highlight',\n\n              // 菜单容器class\n              containerClass: 'tribute-container',\n\n              // 菜单列表item的类\n              itemClass: '',\n\n              // select插入回调\n              selectTemplate: function (item) {\n                return '@' + item.original.value;\n              },\n\n              // menu中item模板\n              menuItemTemplate: function (item) {\n                return item.string;\n              },\n\n              // 无匹配模板显示该模板\n              // 默认隐藏\n              noMatchTemplate: null,\n\n              // 为菜单指定另一个父容器\n              // 容器必须是菜单正确显示的定位元素，即“position:relative`\n              // /默认容器是body\n              menuContainer: document.body,\n\n              // 对象中要搜索的列（接受函数或字符串）\n              lookup: 'key',\n\n              // 默认情况下包含要插入内容的列\n              fillAttr: 'value',\n\n              // emmmmmmm,values\n              values: [],\n\n              // 当您的值函数为异步时，将显示一个可选的加载模板\n              loadingItemTemplate: null,\n\n              // 指定触发器字符串之前是否需要空格\n              requireLeadingSpace: true,\n\n              // 指定是否允许在@中间使用空格\n              allowSpaces: false,\n\n              // 可选地为替换文本指定自定义后缀\n              // （如果未定义，则默认为空白）\n              replaceTextSuffix: '\\n',\n\n              // 确定menu何时被定为. 设为flase且与menuContainer结合使用创建行内menu\n              // (defaults to true)\n              positionMenu: true,\n\n              // 按下空格键时，选择当前匹配项\n              spaceSelectsMatch: false,\n\n              // turn tribute into an autocomplete自动填充\n              autocompleteMode: false,\n\n              // Customize the elements used to wrap matched strings within the results list\n              // 在结果列表中自定义用于包装匹配字符串的元素\n              // defaults to "),a("span"),u(" if undefined\n              searchOpts: {\n                pre: '"),a("span",null,"',\n                post: '"),u("',\n                skip: false // true will skip local search, useful if doing server-side search\n              },\n\n              // Limits the number of items in the menu\n              menuItemLimit: 25,\n\n              // specify the minimum number of characters that must be typed before menu appears\n              menuShowMinLength: 0\n            }\n          ")])],-1)));const y=n(c,[["render",function(e,t,n,m,l,u){const c=s("tribute"),p=s("asyncTribute");return o(),i("div",d,[a("div",b,[f,a("div",h,[a("div",g,[x,r(c,{class:"tribute"})]),a("div",v,[j,r(p,{class:"tribute"})]),w])])])}],["__scopeId","data-v-0ece1a26"]]);export{y as default};
