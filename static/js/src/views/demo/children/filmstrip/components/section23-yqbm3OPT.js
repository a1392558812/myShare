import{_ as n}from"../../../../../../plugin-vue_export-helper-BCo6x5W8.js";import{a as e,g as t,l as s,T as i,x as a,y as o}from"../../../../../../@vue-runtime-core-C-ht4TMg.js";import{k as l}from"../../../../../../@vue-shared-LkD7rn4X.js";const u=(n=>(a("data-v-263e5270"),n=n(),o(),n))((()=>s("h2",null,"部署流程",-1))),c=i('<ol data-v-263e5270><li class="github-action" data-v-263e5270>指定了当代码推送到 main 分支时触发部署动作。</li><li class="github-action" data-v-263e5270> 在 build-and-deploy 作业中，使用 actions/checkout 动作来检出代码库。接着，使用 actions/setup-node 动作来设置 Node.js 环境，并通过 npm install 安装项目的依赖。 </li><li class="github-action" data-v-263e5270> 该配置文件还使用了内建变量 $secrets.GITHUB_TOKEN&#39; 来获取 GitHub 的访问令牌，该令牌用于执行部署操作。你不需要手动设置这个令牌，GitHub Actions 会自动创建并使用它。 </li><li class="github-action" data-v-263e5270> 使用 npm run build 来构建 Vue 项目，并生成静态文件输出到 ./dist 目录。 </li><li class="github-action" data-v-263e5270> 使用了 peaceiris/actions-gh-pages 动作来将构建生成的文件推送到 GitHub Pages 上。它会自动将 ./dist 目录中的内容发布到 GitHub Pages。 </li><li class="github-action" data-v-263e5270> 将上述配置文件保存为 .github/workflows/deploy.yml，并将其推送到你的仓库中。GitHub Actions 将在每次推送到 main 分支时自动运行部署流程，你可以在 Actions 选项卡中查看部署的过程和状态。 </li></ol>',1),d=n(Object.assign({name:"view-demo-filmstrip-section23"},{__name:"section23",setup:n=>(n,i)=>(e(),t("section",null,[u,s("div",{"data-markdown":""},l("```html []\n\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main  # 更改为你的默认分支\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n\n      - name: Set up Node.js\n        uses: actions/setup-node@v2\n        with:\n          node-version: 14  # 更改为你的 Node.js 版本\n\n      - name: Install dependencies\n        run: npm install\n\n      - name: Build\n        run: npm run build\n\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./dist  # 更改为你的构建输出目录\n\n```")),c]))}),[["__scopeId","data-v-263e5270"]]),r=Object.freeze(Object.defineProperty({__proto__:null,default:d},Symbol.toStringTag,{value:"Module"}));export{r as _};
